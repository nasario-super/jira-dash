{"version":3,"file":"InsightsPanel-c3f73002.js","sources":["../../src/components/analytics/InsightsPanel.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Card, CardContent, CardHeader, CardTitle } from '../ui/card';\nimport { Button } from '../ui/button';\nimport { Badge } from '../ui/badge';\nimport {\n  Lightbulb,\n  AlertTriangle,\n  CheckCircle,\n  Info,\n  AlertCircle,\n  TrendingUp,\n  TrendingDown,\n  X,\n  ExternalLink,\n} from 'lucide-react';\nimport { Insight } from '../../services/analyticsService';\n\ninterface InsightsPanelProps {\n  insights: Insight[];\n  loading?: boolean;\n  onDismiss?: (insightId: string) => void;\n  onViewDetails?: (insight: Insight) => void;\n}\n\nconst InsightsPanel: React.FC<InsightsPanelProps> = ({\n  insights,\n  loading = false,\n  onDismiss,\n  onViewDetails,\n}) => {\n  const [dismissedInsights, setDismissedInsights] = useState<Set<string>>(\n    new Set()\n  );\n\n  const getInsightIcon = (type: string) => {\n    switch (type) {\n      case 'success':\n        return <CheckCircle className=\"w-5 h-5 text-green-500\" />;\n      case 'warning':\n        return <AlertTriangle className=\"w-5 h-5 text-yellow-500\" />;\n      case 'critical':\n        return <AlertCircle className=\"w-5 h-5 text-red-500\" />;\n      case 'info':\n      default:\n        return <Info className=\"w-5 h-5 text-blue-500\" />;\n    }\n  };\n\n  const getInsightColor = (type: string) => {\n    switch (type) {\n      case 'success':\n        return 'border-green-200 bg-green-50';\n      case 'warning':\n        return 'border-yellow-200 bg-yellow-50';\n      case 'critical':\n        return 'border-red-200 bg-red-50';\n      case 'info':\n      default:\n        return 'border-blue-200 bg-blue-50';\n    }\n  };\n\n  const getImpactColor = (impact: string) => {\n    switch (impact) {\n      case 'high':\n        return 'bg-red-100 text-red-800';\n      case 'medium':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'low':\n        return 'bg-green-100 text-green-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const handleDismiss = (insightId: string) => {\n    setDismissedInsights(prev => new Set([...prev, insightId]));\n    onDismiss?.(insightId);\n  };\n\n  const visibleInsights = insights.filter(\n    insight => !dismissedInsights.has(insight.id)\n  );\n\n  if (loading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <div className=\"w-5 h-5 bg-gray-200 rounded animate-pulse\" />\n            Insights Autom√°ticos\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {Array.from({ length: 3 }).map((_, index) => (\n              <div key={index} className=\"p-4 border border-border rounded-lg\">\n                <div className=\"flex items-start gap-3\">\n                  <div className=\"w-5 h-5 bg-gray-200 rounded animate-pulse\" />\n                  <div className=\"flex-1 space-y-2\">\n                    <div className=\"h-4 bg-gray-200 rounded animate-pulse w-3/4\" />\n                    <div className=\"h-3 bg-gray-200 rounded animate-pulse w-full\" />\n                    <div className=\"h-3 bg-gray-200 rounded animate-pulse w-2/3\" />\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (visibleInsights.length === 0) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Lightbulb className=\"w-5 h-5\" />\n            Insights Autom√°ticos\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-center py-8\">\n            <Lightbulb className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\n            <p className=\"text-muted-foreground\">\n              Nenhum insight dispon√≠vel no momento\n            </p>\n            <p className=\"text-sm text-muted-foreground mt-2\">\n              Os insights s√£o gerados automaticamente com base nos dados\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Lightbulb className=\"w-5 h-5\" />\n          Insights Autom√°ticos\n          <Badge variant=\"secondary\" className=\"ml-auto\">\n            {visibleInsights.length}\n          </Badge>\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          <AnimatePresence>\n            {visibleInsights.map((insight, index) => (\n              <motion.div\n                key={insight.id}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: -20 }}\n                transition={{ duration: 0.2, delay: index * 0.1 }}\n                className={`p-4 border rounded-lg ${getInsightColor(\n                  insight.type\n                )}`}\n              >\n                <div className=\"flex items-start gap-3\">\n                  {getInsightIcon(insight.type)}\n\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-start justify-between mb-2\">\n                      <h4 className=\"font-medium text-sm\">{insight.title}</h4>\n                      <div className=\"flex items-center gap-2\">\n                        <Badge\n                          variant=\"outline\"\n                          className={`text-xs ${getImpactColor(\n                            insight.impact\n                          )}`}\n                        >\n                          {insight.impact}\n                        </Badge>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => handleDismiss(insight.id)}\n                          className=\"h-6 w-6 p-0\"\n                        >\n                          <X className=\"w-3 h-3\" />\n                        </Button>\n                      </div>\n                    </div>\n\n                    <p className=\"text-sm text-muted-foreground mb-3\">\n                      {insight.description}\n                    </p>\n\n                    <div className=\"bg-background/50 p-3 rounded border\">\n                      <p className=\"text-xs font-medium text-foreground mb-1\">\n                        üí° Recomenda√ß√£o:\n                      </p>\n                      <p className=\"text-xs text-muted-foreground\">\n                        {insight.recommendation}\n                      </p>\n                    </div>\n\n                    {insight.metrics &&\n                      Object.keys(insight.metrics).length > 0 && (\n                        <div className=\"mt-3 flex flex-wrap gap-2\">\n                          {Object.entries(insight.metrics || {}).map(\n                            ([key, value]) => (\n                              <Badge\n                                key={key}\n                                variant=\"outline\"\n                                className=\"text-xs\"\n                              >\n                                {key}:{' '}\n                                {typeof value === 'number'\n                                  ? value.toFixed(1)\n                                  : value}\n                              </Badge>\n                            )\n                          )}\n                        </div>\n                      )}\n\n                    <div className=\"flex items-center justify-between mt-3\">\n                      <span className=\"text-xs text-muted-foreground\">\n                        {new Date(insight.timestamp).toLocaleString('pt-BR')}\n                      </span>\n\n                      {onViewDetails && (\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => onViewDetails(insight)}\n                          className=\"text-xs h-6 px-2\"\n                        >\n                          <ExternalLink className=\"w-3 h-3 mr-1\" />\n                          Ver Detalhes\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </AnimatePresence>\n        </div>\n\n        {dismissedInsights.size > 0 && (\n          <div className=\"mt-4 pt-4 border-t border-border\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => setDismissedInsights(new Set())}\n              className=\"text-xs\"\n            >\n              Restaurar Insights Dispensados ({dismissedInsights.size})\n            </Button>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default InsightsPanel;\n"],"names":["InsightsPanel","insights","loading","onDismiss","onViewDetails","dismissedInsights","setDismissedInsights","useState","getInsightIcon","type","jsx","CheckCircle","AlertTriangle","AlertCircle","Info","getInsightColor","getImpactColor","impact","handleDismiss","insightId","prev","visibleInsights","insight","Card","CardHeader","jsxs","CardTitle","CardContent","_","index","Lightbulb","Badge","AnimatePresence","motion","Button","X","key","value","ExternalLink"],"mappings":"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"}