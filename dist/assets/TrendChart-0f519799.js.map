{"version":3,"file":"TrendChart-0f519799.js","sources":["../../src/components/analytics/TrendChart.tsx"],"sourcesContent":["// @ts-nocheck\nimport React, { useMemo } from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  Area,\n  AreaChart,\n} from 'recharts';\nimport { Card, CardContent, CardHeader, CardTitle } from '../ui/card';\nimport { Badge } from '../ui/badge';\nimport { TrendingUp, TrendingDown, Minus } from 'lucide-react';\nimport { TrendData } from '../../services/analyticsService';\n\ninterface TrendChartProps {\n  data: TrendData[];\n  title: string;\n  metric: string;\n  loading?: boolean;\n}\n\nconst TrendChart: React.FC<TrendChartProps> = ({\n  data,\n  title,\n  metric,\n  loading = false,\n}) => {\n  const chartData = useMemo(() => {\n    return data.map((item : any) => ({\n      ...item,\n      formattedValue: item.value.toLocaleString('pt-BR'),\n      formattedChange: `${\n        item.changePercent >= 0 ? '+' : ''\n      }${item.changePercent.toFixed(1)}%`,\n    }));\n  }, [data]);\n\n  const latestTrend = data[data.length - 1];\n  const previousTrend = data[data.length - 2];\n\n  const getTrendIcon = () => {\n    if (!latestTrend || !previousTrend)\n      return <Minus className=\"w-4 h-4 text-gray-500\" />;\n\n    if (latestTrend.changePercent > 5) {\n      return <TrendingUp className=\"w-4 h-4 text-green-500\" />;\n    } else if (latestTrend.changePercent < -5) {\n      return <TrendingDown className=\"w-4 h-4 text-red-500\" />;\n    }\n    return <Minus className=\"w-4 h-4 text-gray-500\" />;\n  };\n\n  const getTrendColor = () => {\n    if (!latestTrend) return 'text-gray-500';\n    if (latestTrend.changePercent > 5) return 'text-green-500';\n    if (latestTrend.changePercent < -5) return 'text-red-500';\n    return 'text-gray-500';\n  };\n\n  const CustomTooltip = ({ active, payload, label }: any) => {\n    if (active && payload && payload.length) {\n      const data = payload[0].payload;\n      return (\n        <div className=\"bg-background border border-border rounded-lg p-3 shadow-lg\">\n          <p className=\"font-medium\">{label}</p>\n          <p className=\"text-sm text-muted-foreground\">\n            {metric}: <span className=\"font-medium\">{data.formattedValue}</span>\n          </p>\n          <p className=\"text-sm\">\n            Variação:{' '}\n            <span className={getTrendColor()}>{data.formattedChange}</span>\n          </p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  if (loading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <div className=\"w-4 h-4 bg-gray-200 rounded animate-pulse\" />\n            {title}\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"h-64 bg-gray-100 rounded animate-pulse\" />\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!data || data.length === 0) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>{title}</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"h-64 flex items-center justify-center text-muted-foreground\">\n            Nenhum dado disponível\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"flex items-center gap-2\">\n            {getTrendIcon()}\n            {title}\n          </CardTitle>\n          {latestTrend && (\n            <div className=\"flex items-center gap-2\">\n              <Badge variant=\"outline\" className={getTrendColor()}>\n                {latestTrend.formattedChange}\n              </Badge>\n              <span className=\"text-sm text-muted-foreground\">\n                {latestTrend.formattedValue}\n              </span>\n            </div>\n          )}\n        </div>\n      </CardHeader>\n      <CardContent>\n        <div className=\"h-64\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <AreaChart\n              data={chartData}\n              margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\n            >\n              <defs>\n                <linearGradient id=\"colorValue\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop offset=\"5%\" stopColor=\"#3B82F6\" stopOpacity={0.3} />\n                  <stop offset=\"95%\" stopColor=\"#3B82F6\" stopOpacity={0} />\n                </linearGradient>\n              </defs>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n              <XAxis\n                dataKey=\"period\"\n                tick={{ fontSize: 12 }}\n                angle={-45}\n                textAnchor=\"end\"\n                height={60}\n              />\n              <YAxis tick={{ fontSize: 12 }} />\n              <Tooltip content={<CustomTooltip />} />\n              <Area\n                type=\"monotone\"\n                dataKey=\"value\"\n                stroke=\"#3B82F6\"\n                fillOpacity={1}\n                fill=\"url(#colorValue)\"\n                strokeWidth={2}\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        </div>\n\n        <div className=\"mt-4 grid grid-cols-3 gap-4 text-center\">\n          <div>\n            <p className=\"text-xs text-muted-foreground\">Média</p>\n            <p className=\"text-sm font-medium\">\n              {(\n                data.reduce((sum, item) => sum + item.value, 0) / data.length\n              ).toFixed(1)}\n            </p>\n          </div>\n          <div>\n            <p className=\"text-xs text-muted-foreground\">Máximo</p>\n            <p className=\"text-sm font-medium\">\n              {Math.max(...data.map((item : any) => item.value))}\n            </p>\n          </div>\n          <div>\n            <p className=\"text-xs text-muted-foreground\">Mínimo</p>\n            <p className=\"text-sm font-medium\">\n              {Math.min(...data.map((item : any) => item.value))}\n            </p>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default TrendChart;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["TrendChart","data","title","metric","loading","chartData","useMemo","item","latestTrend","previousTrend","getTrendIcon","jsx","Minus","TrendingUp","TrendingDown","getTrendColor","CustomTooltip","active","payload","label","jsxs","Card","CardHeader","CardTitle","CardContent","Badge","ResponsiveContainer","AreaChart","CartesianGrid","XAxis","YAxis","Tooltip","Area","sum"],"mappings":"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"}