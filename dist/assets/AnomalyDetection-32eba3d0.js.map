{"version":3,"file":"AnomalyDetection-32eba3d0.js","sources":["../../src/components/analytics/AnomalyDetection.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../ui/card';\nimport { Badge } from '../ui/badge';\nimport { Button } from '../ui/button';\nimport {\n  AlertTriangle,\n  TrendingUp,\n  TrendingDown,\n  Activity,\n  Zap,\n  Shield,\n  Eye,\n  Filter,\n  RefreshCw,\n} from 'lucide-react';\nimport { JiraIssue, SprintData } from '../../types/jira.types';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  ScatterChart,\n  Scatter,\n} from 'recharts';\n\ninterface AnomalyDetectionProps {\n  issues: JiraIssue[];\n  sprints: SprintData[];\n  timeRange: 'week' | 'month' | 'quarter';\n}\n\ninterface AnomalyData {\n  id: string;\n  type: 'spike' | 'drop' | 'pattern_break' | 'outlier';\n  metric: string;\n  severity: 'low' | 'medium' | 'high' | 'critical';\n  detectedAt: Date;\n  value: number;\n  expectedValue: number;\n  deviation: number;\n  description: string;\n  context: Record<string, any>;\n  chartData: Array<{\n    date: string;\n    value: number;\n    expected: number;\n    anomaly?: boolean;\n  }>;\n}\n\nconst AnomalyDetection: React.FC<AnomalyDetectionProps> = ({\n  issues,\n  sprints,\n  timeRange,\n}) => {\n  const [anomalies, setAnomalies] = useState<AnomalyData[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedMetric, setSelectedMetric] = useState<string>('all');\n  const [selectedSeverity, setSelectedSeverity] = useState<string>('all');\n\n  useEffect(() => {\n    detectAnomalies();\n  }, [issues, sprints, timeRange]);\n\n  const detectAnomalies = async () => {\n    setLoading(true);\n    try {\n      const detectedAnomalies = await performAnomalyDetection(\n        issues,\n        timeRange\n      );\n      setAnomalies(detectedAnomalies);\n    } catch (error) {\n      console.error('Error detecting anomalies:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const performAnomalyDetection = async (\n    issues: JiraIssue[],\n    timeRange: string\n  ): Promise<AnomalyData[]> => {\n    const anomalies: AnomalyData[] = [];\n\n    // Get time series data\n    const timeSeriesData = getTimeSeriesData(issues, timeRange);\n\n    // Detect velocity anomalies\n    const velocityAnomalies = detectVelocityAnomalies(timeSeriesData);\n    anomalies.push(...velocityAnomalies);\n\n    // Detect completion anomalies\n    const completionAnomalies = detectCompletionAnomalies(timeSeriesData);\n    anomalies.push(...completionAnomalies);\n\n    // Detect bug rate anomalies\n    const bugAnomalies = detectBugAnomalies(timeSeriesData);\n    anomalies.push(...bugAnomalies);\n\n    // Detect cycle time anomalies\n    const cycleTimeAnomalies = detectCycleTimeAnomalies(timeSeriesData);\n    anomalies.push(...cycleTimeAnomalies);\n\n    return anomalies.sort((a, b) => {\n      const severityOrder = { critical: 4, high: 3, medium: 2, low: 1 };\n      return (\n        severityOrder[b.severity as keyof typeof severityOrder] -\n        severityOrder[a.severity as keyof typeof severityOrder]\n      );\n    });\n  };\n\n  const getTimeSeriesData = (issues: JiraIssue[], timeRange: string) => {\n    const now = new Date();\n    const daysBack = timeRange === 'week' ? 7 : timeRange === 'month' ? 30 : 90;\n    const data: Array<{\n      date: string;\n      velocity: number;\n      completion: number;\n      bugRate: number;\n      cycleTime: number;\n      issueCount: number;\n    }> = [];\n\n    for (let i = daysBack; i >= 0; i--) {\n      const date = new Date(now.getTime() - i * 24 * 60 * 60 * 1000);\n      const dayIssues = issues.filter((issue : any) => {\n        const created = new Date(issue.fields.created);\n        return created.toDateString() === date.toDateString();\n      });\n\n      const completed = dayIssues.filter(\n        issue => issue.fields.status.statusCategory.name === 'Done'\n      );\n\n      const bugs = dayIssues.filter(\n        issue => issue.fields.issuetype.name === 'Bug'\n      );\n\n      data.push({\n        date: date.toISOString().split('T')[0],\n        velocity: calculateVelocity(dayIssues),\n        completion:\n          dayIssues.length > 0 ? completed.length / dayIssues.length : 0,\n        bugRate: dayIssues.length > 0 ? bugs.length / dayIssues.length : 0,\n        cycleTime: calculateCycleTime(dayIssues),\n        issueCount: dayIssues.length,\n      });\n    }\n\n    return data;\n  };\n\n  const detectVelocityAnomalies = (data: any[]): AnomalyData[] => {\n    const anomalies: AnomalyData[] = [];\n    const velocities = data.map((d : any) => d.velocity);\n    const mean = velocities.reduce((a, b) => a + b, 0) / velocities.length;\n    const stdDev = Math.sqrt(\n      velocities.reduce((a, b) => a + Math.pow(b - mean, 2), 0) /\n        velocities.length\n    );\n\n    data.forEach((point, index) => {\n      if (Math.abs(point.velocity - mean) > 2 * stdDev) {\n        const deviation = ((point.velocity - mean) / mean) * 100;\n        const severity =\n          Math.abs(deviation) > 100\n            ? 'critical'\n            : Math.abs(deviation) > 50\n            ? 'high'\n            : Math.abs(deviation) > 25\n            ? 'medium'\n            : 'low';\n\n        anomalies.push({\n          id: `velocity-${index}`,\n          type: point.velocity > mean ? 'spike' : 'drop',\n          metric: 'velocity',\n          severity,\n          detectedAt: new Date(point.date),\n          value: point.velocity,\n          expectedValue: mean,\n          deviation,\n          description: `Velocidade ${\n            point.velocity > mean ? 'aumentou' : 'diminuiu'\n          } ${Math.abs(deviation).toFixed(1)}% em relação à média`,\n          context: { mean, stdDev, index },\n          chartData: data.map((d : any) => ({\n            date: d.date,\n            value: d.velocity,\n            expected: mean,\n            anomaly: d === point,\n          })),\n        });\n      }\n    });\n\n    return anomalies;\n  };\n\n  const detectCompletionAnomalies = (data: any[]): AnomalyData[] => {\n    const anomalies: AnomalyData[] = [];\n    const completions = data.map((d : any) => d.completion);\n    const mean = completions.reduce((a, b) => a + b, 0) / completions.length;\n    const stdDev = Math.sqrt(\n      completions.reduce((a, b) => a + Math.pow(b - mean, 2), 0) /\n        completions.length\n    );\n\n    data.forEach((point, index) => {\n      if (Math.abs(point.completion - mean) > 2 * stdDev) {\n        const deviation = ((point.completion - mean) / mean) * 100;\n        const severity =\n          Math.abs(deviation) > 100\n            ? 'critical'\n            : Math.abs(deviation) > 50\n            ? 'high'\n            : Math.abs(deviation) > 25\n            ? 'medium'\n            : 'low';\n\n        anomalies.push({\n          id: `completion-${index}`,\n          type: point.completion > mean ? 'spike' : 'drop',\n          metric: 'completion',\n          severity,\n          detectedAt: new Date(point.date),\n          value: point.completion,\n          expectedValue: mean,\n          deviation,\n          description: `Taxa de conclusão ${\n            point.completion > mean ? 'aumentou' : 'diminuiu'\n          } ${Math.abs(deviation).toFixed(1)}% em relação à média`,\n          context: { mean, stdDev, index },\n          chartData: data.map((d : any) => ({\n            date: d.date,\n            value: d.completion,\n            expected: mean,\n            anomaly: d === point,\n          })),\n        });\n      }\n    });\n\n    return anomalies;\n  };\n\n  const detectBugAnomalies = (data: any[]): AnomalyData[] => {\n    const anomalies: AnomalyData[] = [];\n    const bugRates = data.map((d : any) => d.bugRate);\n    const mean = bugRates.reduce((a, b) => a + b, 0) / bugRates.length;\n    const stdDev = Math.sqrt(\n      bugRates.reduce((a, b) => a + Math.pow(b - mean, 2), 0) / bugRates.length\n    );\n\n    data.forEach((point, index) => {\n      if (Math.abs(point.bugRate - mean) > 2 * stdDev) {\n        const deviation = ((point.bugRate - mean) / mean) * 100;\n        const severity =\n          Math.abs(deviation) > 100\n            ? 'critical'\n            : Math.abs(deviation) > 50\n            ? 'high'\n            : Math.abs(deviation) > 25\n            ? 'medium'\n            : 'low';\n\n        anomalies.push({\n          id: `bug-${index}`,\n          type: point.bugRate > mean ? 'spike' : 'drop',\n          metric: 'bugRate',\n          severity,\n          detectedAt: new Date(point.date),\n          value: point.bugRate,\n          expectedValue: mean,\n          deviation,\n          description: `Taxa de bugs ${\n            point.bugRate > mean ? 'aumentou' : 'diminuiu'\n          } ${Math.abs(deviation).toFixed(1)}% em relação à média`,\n          context: { mean, stdDev, index },\n          chartData: data.map((d : any) => ({\n            date: d.date,\n            value: d.bugRate,\n            expected: mean,\n            anomaly: d === point,\n          })),\n        });\n      }\n    });\n\n    return anomalies;\n  };\n\n  const detectCycleTimeAnomalies = (data: any[]): AnomalyData[] => {\n    const anomalies: AnomalyData[] = [];\n    const cycleTimes = data.map((d : any) => d.cycleTime);\n    const mean = cycleTimes.reduce((a, b) => a + b, 0) / cycleTimes.length;\n    const stdDev = Math.sqrt(\n      cycleTimes.reduce((a, b) => a + Math.pow(b - mean, 2), 0) /\n        cycleTimes.length\n    );\n\n    data.forEach((point, index) => {\n      if (Math.abs(point.cycleTime - mean) > 2 * stdDev) {\n        const deviation = ((point.cycleTime - mean) / mean) * 100;\n        const severity =\n          Math.abs(deviation) > 100\n            ? 'critical'\n            : Math.abs(deviation) > 50\n            ? 'high'\n            : Math.abs(deviation) > 25\n            ? 'medium'\n            : 'low';\n\n        anomalies.push({\n          id: `cycle-${index}`,\n          type: point.cycleTime > mean ? 'spike' : 'drop',\n          metric: 'cycleTime',\n          severity,\n          detectedAt: new Date(point.date),\n          value: point.cycleTime,\n          expectedValue: mean,\n          deviation,\n          description: `Tempo de ciclo ${\n            point.cycleTime > mean ? 'aumentou' : 'diminuiu'\n          } ${Math.abs(deviation).toFixed(1)}% em relação à média`,\n          context: { mean, stdDev, index },\n          chartData: data.map((d : any) => ({\n            date: d.date,\n            value: d.cycleTime,\n            expected: mean,\n            anomaly: d === point,\n          })),\n        });\n      }\n    });\n\n    return anomalies;\n  };\n\n  const calculateVelocity = (issues: JiraIssue[]): number => {\n    const completed = issues.filter(\n      issue => issue.fields.status.statusCategory.name === 'Done'\n    );\n\n    return completed.reduce((sum, issue) => {\n      const type = issue.fields.issuetype.name;\n      const points =\n        type === 'Story' ? 3 : type === 'Task' ? 2 : type === 'Bug' ? 1 : 5;\n      return sum + points;\n    }, 0);\n  };\n\n  const calculateCycleTime = (issues: JiraIssue[]): number => {\n    const completed = issues.filter(\n      issue => issue.fields.status.statusCategory.name === 'Done'\n    );\n\n    if (completed.length === 0) return 0;\n\n    const totalCycleTime = completed.reduce((sum, issue) => {\n      const created = new Date(issue.fields.created);\n      const updated = new Date(issue.fields.updated);\n      return sum + (updated.getTime() - created.getTime());\n    }, 0);\n\n    return totalCycleTime / completed.length / (1000 * 60 * 60 * 24);\n  };\n\n  const getAnomalyIcon = (type: string) => {\n    switch (type) {\n      case 'spike':\n        return <TrendingUp className=\"w-5 h-5 text-red-500\" />;\n      case 'drop':\n        return <TrendingDown className=\"w-5 h-5 text-blue-500\" />;\n      case 'pattern_break':\n        return <Activity className=\"w-5 h-5 text-orange-500\" />;\n      case 'outlier':\n        return <Zap className=\"w-5 h-5 text-purple-500\" />;\n      default:\n        return <AlertTriangle className=\"w-5 h-5 text-gray-500\" />;\n    }\n  };\n\n  const getSeverityColor = (severity: string) => {\n    switch (severity) {\n      case 'critical':\n        return 'bg-red-100 text-red-800 border-red-200';\n      case 'high':\n        return 'bg-orange-100 text-orange-800 border-orange-200';\n      case 'medium':\n        return 'bg-yellow-100 text-yellow-800 border-yellow-200';\n      case 'low':\n        return 'bg-green-100 text-green-800 border-green-200';\n      default:\n        return 'bg-gray-100 text-gray-800 border-gray-200';\n    }\n  };\n\n  const filteredAnomalies = anomalies.filter((anomaly : any) => {\n    const metricMatch =\n      selectedMetric === 'all' || anomaly.metric === selectedMetric;\n    const severityMatch =\n      selectedSeverity === 'all' || anomaly.severity === selectedSeverity;\n    return metricMatch && severityMatch;\n  });\n\n  const anomalyStats = {\n    total: anomalies.length,\n    critical: anomalies.filter((a : any) => a.severity === 'critical').length,\n    high: anomalies.filter((a : any) => a.severity === 'high').length,\n    medium: anomalies.filter((a : any) => a.severity === 'medium').length,\n    low: anomalies.filter((a : any) => a.severity === 'low').length,\n  };\n\n  if (loading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Shield className=\"w-5 h-5\" />\n            Detecção de Anomalias\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-center py-8\">\n            <RefreshCw className=\"w-6 h-6 animate-spin mr-2\" />\n            <span>Analisando padrões e detectando anomalias...</span>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"flex items-center gap-2\">\n            <Shield className=\"w-5 h-5\" />\n            Detecção de Anomalias\n            <Badge variant=\"secondary\" className=\"ml-2\">\n              {anomalyStats.total}\n            </Badge>\n          </CardTitle>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={detectAnomalies}\n            disabled={loading}\n          >\n            <RefreshCw\n              className={`w-4 h-4 mr-2 ${loading ? 'animate-spin' : ''}`}\n            />\n            Reanalisar\n          </Button>\n        </div>\n\n        {/* Stats */}\n        <div className=\"grid grid-cols-5 gap-2 mt-4\">\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-red-600\">\n              {anomalyStats.critical}\n            </div>\n            <div className=\"text-xs text-gray-500\">Crítico</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-orange-600\">\n              {anomalyStats.high}\n            </div>\n            <div className=\"text-xs text-gray-500\">Alto</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-yellow-600\">\n              {anomalyStats.medium}\n            </div>\n            <div className=\"text-xs text-gray-500\">Médio</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-green-600\">\n              {anomalyStats.low}\n            </div>\n            <div className=\"text-xs text-gray-500\">Baixo</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-gray-600\">\n              {anomalyStats.total}\n            </div>\n            <div className=\"text-xs text-gray-500\">Total</div>\n          </div>\n        </div>\n      </CardHeader>\n\n      <CardContent>\n        {/* Filters */}\n        <div className=\"flex items-center gap-4 mb-6\">\n          <div className=\"flex items-center gap-2\">\n            <Filter className=\"w-4 h-4\" />\n            <select\n              value={selectedMetric}\n              onChange={e => setSelectedMetric(e.target.value)}\n              className=\"px-3 py-1 border rounded-md text-sm\"\n            >\n              <option value=\"all\">Todas as Métricas</option>\n              <option value=\"velocity\">Velocidade</option>\n              <option value=\"completion\">Conclusão</option>\n              <option value=\"bugRate\">Taxa de Bugs</option>\n              <option value=\"cycleTime\">Tempo de Ciclo</option>\n            </select>\n          </div>\n\n          <div className=\"flex items-center gap-2\">\n            <select\n              value={selectedSeverity}\n              onChange={e => setSelectedSeverity(e.target.value)}\n              className=\"px-3 py-1 border rounded-md text-sm\"\n            >\n              <option value=\"all\">Todas as Severidades</option>\n              <option value=\"critical\">Crítico</option>\n              <option value=\"high\">Alto</option>\n              <option value=\"medium\">Médio</option>\n              <option value=\"low\">Baixo</option>\n            </select>\n          </div>\n        </div>\n\n        {/* Anomalies List */}\n        <div className=\"space-y-6\">\n          {filteredAnomalies.length === 0 ? (\n            <div className=\"text-center py-8 text-gray-500\">\n              <Shield className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n              <p>Nenhuma anomalia detectada nos dados atuais.</p>\n              <p className=\"text-sm\">\n                O sistema está funcionando dentro dos padrões esperados.\n              </p>\n            </div>\n          ) : (\n            filteredAnomalies.map((anomaly : any) => (\n              <div key={anomaly.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex items-start justify-between mb-4\">\n                  <div className=\"flex items-center gap-3\">\n                    {getAnomalyIcon(anomaly.type)}\n                    <div>\n                      <h3 className=\"font-semibold text-lg\">\n                        Anomalia em {anomaly.metric}\n                      </h3>\n                      <div className=\"flex items-center gap-2 mt-1\">\n                        <Badge className={getSeverityColor(anomaly.severity)}>\n                          {anomaly.severity}\n                        </Badge>\n                        <Badge variant=\"outline\">{anomaly.type}</Badge>\n                        <span className=\"text-sm text-gray-500\">\n                          Desvio: {anomaly.deviation.toFixed(1)}%\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"text-right\">\n                    <div className=\"text-sm text-gray-500\">Valor Atual</div>\n                    <div className=\"text-lg font-bold\">\n                      {anomaly.value.toFixed(2)}\n                    </div>\n                    <div className=\"text-sm text-gray-500\">\n                      Esperado: {anomaly.expectedValue.toFixed(2)}\n                    </div>\n                  </div>\n                </div>\n\n                <p className=\"text-gray-700 mb-4\">{anomaly.description}</p>\n\n                {/* Chart */}\n                <div className=\"h-64 mb-4\">\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <LineChart data={anomaly.chartData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis\n                        dataKey=\"date\"\n                        tickFormatter={value =>\n                          new Date(value).toLocaleDateString('pt-BR')\n                        }\n                      />\n                      <YAxis />\n                      <Tooltip\n                        labelFormatter={value =>\n                          new Date(value).toLocaleDateString('pt-BR')\n                        }\n                      />\n                      <Line\n                        type=\"monotone\"\n                        dataKey=\"value\"\n                        stroke=\"#8884d8\"\n                        strokeWidth={2}\n                        name=\"Valor Real\"\n                      />\n                      <Line\n                        type=\"monotone\"\n                        dataKey=\"expected\"\n                        stroke=\"#82ca9d\"\n                        strokeWidth={2}\n                        strokeDasharray=\"5 5\"\n                        name=\"Valor Esperado\"\n                      />\n                    </LineChart>\n                  </ResponsiveContainer>\n                </div>\n\n                <div className=\"flex items-center justify-between pt-3 border-t\">\n                  <span className=\"text-xs text-gray-500\">\n                    Detectado em: {anomaly.detectedAt.toLocaleString('pt-BR')}\n                  </span>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => {\n                      console.log('🔍 Detalhes da anomalia:', anomaly);\n                      alert(\n                        `Anomalia: ${anomaly.type}\\n\\nMétrica: ${\n                          anomaly.metric\n                        }\\n\\nSeveridade: ${anomaly.severity}\\n\\nDescrição: ${\n                          anomaly.description\n                        }\\n\\nValor Detectado: ${\n                          anomaly.value\n                        }\\n\\nValor Esperado: ${\n                          anomaly.expectedValue\n                        }\\n\\nDesvio: ${anomaly.deviation.toFixed(2)}%`\n                      );\n                    }}\n                  >\n                    <Eye className=\"w-4 h-4 mr-1\" />\n                    Investigar\n                  </Button>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default AnomalyDetection;\n"],"names":["AnomalyDetection","issues","sprints","timeRange","anomalies","setAnomalies","useState","loading","setLoading","selectedMetric","setSelectedMetric","selectedSeverity","setSelectedSeverity","useEffect","detectAnomalies","detectedAnomalies","performAnomalyDetection","error","timeSeriesData","getTimeSeriesData","velocityAnomalies","detectVelocityAnomalies","completionAnomalies","detectCompletionAnomalies","bugAnomalies","detectBugAnomalies","cycleTimeAnomalies","detectCycleTimeAnomalies","a","b","severityOrder","now","daysBack","data","i","date","dayIssues","issue","completed","bugs","calculateVelocity","calculateCycleTime","velocities","d","mean","stdDev","point","index","deviation","severity","completions","bugRates","cycleTimes","sum","type","created","updated","getAnomalyIcon","jsx","TrendingUp","TrendingDown","Activity","Zap","AlertTriangle","getSeverityColor","filteredAnomalies","anomaly","metricMatch","severityMatch","anomalyStats","Card","CardHeader","jsxs","CardTitle","Shield","CardContent","RefreshCw","Badge","Button","Filter","e","ResponsiveContainer","LineChart","CartesianGrid","XAxis","value","YAxis","Tooltip","Line","Eye"],"mappings":"8SAqDA,MAAMA,GAAoD,CAAC,CACzD,OAAAC,EACA,QAAAC,EACA,UAAAC,CACF,IAAM,CACJ,KAAM,CAACC,EAAWC,CAAY,EAAIC,EAAA,SAAwB,CAAE,CAAA,EACtD,CAACC,EAASC,CAAU,EAAIF,WAAS,EAAK,EACtC,CAACG,EAAgBC,CAAiB,EAAIJ,WAAiB,KAAK,EAC5D,CAACK,EAAkBC,CAAmB,EAAIN,WAAiB,KAAK,EAEtEO,EAAAA,UAAU,IAAM,CACEC,GACf,EAAA,CAACb,EAAQC,EAASC,CAAS,CAAC,EAE/B,MAAMW,EAAkB,SAAY,CAClCN,EAAW,EAAI,EACX,GAAA,CACF,MAAMO,EAAoB,MAAMC,EAC9Bf,EACAE,CAAA,EAEFE,EAAaU,CAAiB,QACvBE,EAAO,CACN,QAAA,MAAM,6BAA8BA,CAAK,CAAA,QACjD,CACAT,EAAW,EAAK,CAClB,CAAA,EAGIQ,EAA0B,MAC9Bf,EACAE,IAC2B,CAC3B,MAAMC,EAA2B,CAAA,EAG3Bc,EAAiBC,EAAkBlB,EAAQE,CAAS,EAGpDiB,EAAoBC,EAAwBH,CAAc,EAChEd,EAAU,KAAK,GAAGgB,CAAiB,EAG7B,MAAAE,EAAsBC,EAA0BL,CAAc,EACpEd,EAAU,KAAK,GAAGkB,CAAmB,EAG/B,MAAAE,EAAeC,EAAmBP,CAAc,EACtDd,EAAU,KAAK,GAAGoB,CAAY,EAGxB,MAAAE,EAAqBC,EAAyBT,CAAc,EAClEd,OAAAA,EAAU,KAAK,GAAGsB,CAAkB,EAE7BtB,EAAU,KAAK,CAACwB,EAAGC,IAAM,CACxB,MAAAC,EAAgB,CAAE,SAAU,EAAG,KAAM,EAAG,OAAQ,EAAG,IAAK,GAC9D,OACEA,EAAcD,EAAE,QAAsC,EACtDC,EAAcF,EAAE,QAAsC,CAAA,CAEzD,CAAA,EAGGT,EAAoB,CAAClB,EAAqBE,IAAsB,CAC9D,MAAA4B,MAAU,KACVC,EAAW7B,IAAc,OAAS,EAAIA,IAAc,QAAU,GAAK,GACnE8B,EAOD,CAAA,EAEL,QAASC,EAAIF,EAAUE,GAAK,EAAGA,IAAK,CAC5B,MAAAC,EAAO,IAAI,KAAKJ,EAAI,QAAA,EAAYG,EAAI,GAAK,GAAK,GAAK,GAAI,EACvDE,EAAYnC,EAAO,OAAQoC,GACf,IAAI,KAAKA,EAAM,OAAO,OAAO,EAC9B,aAAA,IAAmBF,EAAK,aAAa,CACrD,EAEKG,EAAYF,EAAU,OACjBC,GAAAA,EAAM,OAAO,OAAO,eAAe,OAAS,MAAA,EAGjDE,EAAOH,EAAU,OACZC,GAAAA,EAAM,OAAO,UAAU,OAAS,KAAA,EAG3CJ,EAAK,KAAK,CACR,KAAME,EAAK,YAAA,EAAc,MAAM,GAAG,EAAE,CAAC,EACrC,SAAUK,EAAkBJ,CAAS,EACrC,WACEA,EAAU,OAAS,EAAIE,EAAU,OAASF,EAAU,OAAS,EAC/D,QAASA,EAAU,OAAS,EAAIG,EAAK,OAASH,EAAU,OAAS,EACjE,UAAWK,EAAmBL,CAAS,EACvC,WAAYA,EAAU,MAAA,CACvB,CACH,CAEO,OAAAH,CAAA,EAGHZ,EAA2BY,GAA+B,CAC9D,MAAM7B,EAA2B,CAAA,EAC3BsC,EAAaT,EAAK,IAAKU,GAAYA,EAAE,QAAQ,EAC7CC,EAAOF,EAAW,OAAO,CAACd,EAAGC,IAAMD,EAAIC,EAAG,CAAC,EAAIa,EAAW,OAC1DG,EAAS,KAAK,KAClBH,EAAW,OAAO,CAACd,EAAGC,IAAMD,EAAI,KAAK,IAAIC,EAAIe,EAAM,CAAC,EAAG,CAAC,EACtDF,EAAW,MAAA,EAGV,OAAAT,EAAA,QAAQ,CAACa,EAAOC,IAAU,CAC7B,GAAI,KAAK,IAAID,EAAM,SAAWF,CAAI,EAAI,EAAIC,EAAQ,CAChD,MAAMG,GAAcF,EAAM,SAAWF,GAAQA,EAAQ,IAC/CK,EACJ,KAAK,IAAID,CAAS,EAAI,IAClB,WACA,KAAK,IAAIA,CAAS,EAAI,GACtB,OACA,KAAK,IAAIA,CAAS,EAAI,GACtB,SACA,MAEN5C,EAAU,KAAK,CACb,GAAI,YAAY2C,CAAK,GACrB,KAAMD,EAAM,SAAWF,EAAO,QAAU,OACxC,OAAQ,WACR,SAAAK,EACA,WAAY,IAAI,KAAKH,EAAM,IAAI,EAC/B,MAAOA,EAAM,SACb,cAAeF,EACf,UAAAI,EACA,YAAa,cACXF,EAAM,SAAWF,EAAO,WAAa,UACvC,IAAI,KAAK,IAAII,CAAS,EAAE,QAAQ,CAAC,CAAC,uBAClC,QAAS,CAAE,KAAAJ,EAAM,OAAAC,EAAQ,MAAAE,CAAM,EAC/B,UAAWd,EAAK,IAAKU,IAAa,CAChC,KAAMA,EAAE,KACR,MAAOA,EAAE,SACT,SAAUC,EACV,QAASD,IAAMG,CAAA,EACf,CAAA,CACH,CACH,CAAA,CACD,EAEM1C,CAAA,EAGHmB,EAA6BU,GAA+B,CAChE,MAAM7B,EAA2B,CAAA,EAC3B8C,EAAcjB,EAAK,IAAKU,GAAYA,EAAE,UAAU,EAChDC,EAAOM,EAAY,OAAO,CAACtB,EAAGC,IAAMD,EAAIC,EAAG,CAAC,EAAIqB,EAAY,OAC5DL,EAAS,KAAK,KAClBK,EAAY,OAAO,CAACtB,EAAGC,IAAMD,EAAI,KAAK,IAAIC,EAAIe,EAAM,CAAC,EAAG,CAAC,EACvDM,EAAY,MAAA,EAGX,OAAAjB,EAAA,QAAQ,CAACa,EAAOC,IAAU,CAC7B,GAAI,KAAK,IAAID,EAAM,WAAaF,CAAI,EAAI,EAAIC,EAAQ,CAClD,MAAMG,GAAcF,EAAM,WAAaF,GAAQA,EAAQ,IACjDK,EACJ,KAAK,IAAID,CAAS,EAAI,IAClB,WACA,KAAK,IAAIA,CAAS,EAAI,GACtB,OACA,KAAK,IAAIA,CAAS,EAAI,GACtB,SACA,MAEN5C,EAAU,KAAK,CACb,GAAI,cAAc2C,CAAK,GACvB,KAAMD,EAAM,WAAaF,EAAO,QAAU,OAC1C,OAAQ,aACR,SAAAK,EACA,WAAY,IAAI,KAAKH,EAAM,IAAI,EAC/B,MAAOA,EAAM,WACb,cAAeF,EACf,UAAAI,EACA,YAAa,qBACXF,EAAM,WAAaF,EAAO,WAAa,UACzC,IAAI,KAAK,IAAII,CAAS,EAAE,QAAQ,CAAC,CAAC,uBAClC,QAAS,CAAE,KAAAJ,EAAM,OAAAC,EAAQ,MAAAE,CAAM,EAC/B,UAAWd,EAAK,IAAKU,IAAa,CAChC,KAAMA,EAAE,KACR,MAAOA,EAAE,WACT,SAAUC,EACV,QAASD,IAAMG,CAAA,EACf,CAAA,CACH,CACH,CAAA,CACD,EAEM1C,CAAA,EAGHqB,EAAsBQ,GAA+B,CACzD,MAAM7B,EAA2B,CAAA,EAC3B+C,EAAWlB,EAAK,IAAKU,GAAYA,EAAE,OAAO,EAC1CC,EAAOO,EAAS,OAAO,CAACvB,EAAGC,IAAMD,EAAIC,EAAG,CAAC,EAAIsB,EAAS,OACtDN,EAAS,KAAK,KAClBM,EAAS,OAAO,CAACvB,EAAGC,IAAMD,EAAI,KAAK,IAAIC,EAAIe,EAAM,CAAC,EAAG,CAAC,EAAIO,EAAS,MAAA,EAGhE,OAAAlB,EAAA,QAAQ,CAACa,EAAOC,IAAU,CAC7B,GAAI,KAAK,IAAID,EAAM,QAAUF,CAAI,EAAI,EAAIC,EAAQ,CAC/C,MAAMG,GAAcF,EAAM,QAAUF,GAAQA,EAAQ,IAC9CK,EACJ,KAAK,IAAID,CAAS,EAAI,IAClB,WACA,KAAK,IAAIA,CAAS,EAAI,GACtB,OACA,KAAK,IAAIA,CAAS,EAAI,GACtB,SACA,MAEN5C,EAAU,KAAK,CACb,GAAI,OAAO2C,CAAK,GAChB,KAAMD,EAAM,QAAUF,EAAO,QAAU,OACvC,OAAQ,UACR,SAAAK,EACA,WAAY,IAAI,KAAKH,EAAM,IAAI,EAC/B,MAAOA,EAAM,QACb,cAAeF,EACf,UAAAI,EACA,YAAa,gBACXF,EAAM,QAAUF,EAAO,WAAa,UACtC,IAAI,KAAK,IAAII,CAAS,EAAE,QAAQ,CAAC,CAAC,uBAClC,QAAS,CAAE,KAAAJ,EAAM,OAAAC,EAAQ,MAAAE,CAAM,EAC/B,UAAWd,EAAK,IAAKU,IAAa,CAChC,KAAMA,EAAE,KACR,MAAOA,EAAE,QACT,SAAUC,EACV,QAASD,IAAMG,CAAA,EACf,CAAA,CACH,CACH,CAAA,CACD,EAEM1C,CAAA,EAGHuB,EAA4BM,GAA+B,CAC/D,MAAM7B,EAA2B,CAAA,EAC3BgD,EAAanB,EAAK,IAAKU,GAAYA,EAAE,SAAS,EAC9CC,EAAOQ,EAAW,OAAO,CAACxB,EAAGC,IAAMD,EAAIC,EAAG,CAAC,EAAIuB,EAAW,OAC1DP,EAAS,KAAK,KAClBO,EAAW,OAAO,CAACxB,EAAGC,IAAMD,EAAI,KAAK,IAAIC,EAAIe,EAAM,CAAC,EAAG,CAAC,EACtDQ,EAAW,MAAA,EAGV,OAAAnB,EAAA,QAAQ,CAACa,EAAOC,IAAU,CAC7B,GAAI,KAAK,IAAID,EAAM,UAAYF,CAAI,EAAI,EAAIC,EAAQ,CACjD,MAAMG,GAAcF,EAAM,UAAYF,GAAQA,EAAQ,IAChDK,EACJ,KAAK,IAAID,CAAS,EAAI,IAClB,WACA,KAAK,IAAIA,CAAS,EAAI,GACtB,OACA,KAAK,IAAIA,CAAS,EAAI,GACtB,SACA,MAEN5C,EAAU,KAAK,CACb,GAAI,SAAS2C,CAAK,GAClB,KAAMD,EAAM,UAAYF,EAAO,QAAU,OACzC,OAAQ,YACR,SAAAK,EACA,WAAY,IAAI,KAAKH,EAAM,IAAI,EAC/B,MAAOA,EAAM,UACb,cAAeF,EACf,UAAAI,EACA,YAAa,kBACXF,EAAM,UAAYF,EAAO,WAAa,UACxC,IAAI,KAAK,IAAII,CAAS,EAAE,QAAQ,CAAC,CAAC,uBAClC,QAAS,CAAE,KAAAJ,EAAM,OAAAC,EAAQ,MAAAE,CAAM,EAC/B,UAAWd,EAAK,IAAKU,IAAa,CAChC,KAAMA,EAAE,KACR,MAAOA,EAAE,UACT,SAAUC,EACV,QAASD,IAAMG,CAAA,EACf,CAAA,CACH,CACH,CAAA,CACD,EAEM1C,CAAA,EAGHoC,EAAqBvC,GACPA,EAAO,OACdoC,GAAAA,EAAM,OAAO,OAAO,eAAe,OAAS,MAAA,EAGtC,OAAO,CAACgB,EAAKhB,IAAU,CAChC,MAAAiB,EAAOjB,EAAM,OAAO,UAAU,KAGpC,OAAOgB,GADLC,IAAS,QAAU,EAAIA,IAAS,OAAS,EAAIA,IAAS,MAAQ,EAAI,IAEnE,CAAC,EAGAb,EAAsBxC,GAAgC,CAC1D,MAAMqC,EAAYrC,EAAO,OACdoC,GAAAA,EAAM,OAAO,OAAO,eAAe,OAAS,MAAA,EAGvD,OAAIC,EAAU,SAAW,EAAU,EAEZA,EAAU,OAAO,CAACe,EAAKhB,IAAU,CACtD,MAAMkB,EAAU,IAAI,KAAKlB,EAAM,OAAO,OAAO,EACvCmB,EAAU,IAAI,KAAKnB,EAAM,OAAO,OAAO,EAC7C,OAAOgB,GAAOG,EAAQ,QAAQ,EAAID,EAAQ,QAAQ,IACjD,CAAC,EAEoBjB,EAAU,QAAU,IAAO,GAAK,GAAK,GAAA,EAGzDmB,EAAkBH,GAAiB,CACvC,OAAQA,EAAM,CACZ,IAAK,QACI,OAAAI,EAAA,IAACC,EAAW,CAAA,UAAU,sBAAuB,CAAA,EACtD,IAAK,OACI,OAAAD,EAAA,IAACE,EAAa,CAAA,UAAU,uBAAwB,CAAA,EACzD,IAAK,gBACI,OAAAF,EAAA,IAACG,EAAS,CAAA,UAAU,yBAA0B,CAAA,EACvD,IAAK,UACI,OAAAH,EAAA,IAACI,EAAI,CAAA,UAAU,yBAA0B,CAAA,EAClD,QACS,OAAAJ,EAAA,IAACK,EAAc,CAAA,UAAU,uBAAwB,CAAA,CAC5D,CAAA,EAGIC,EAAoBf,GAAqB,CAC7C,OAAQA,EAAU,CAChB,IAAK,WACI,MAAA,yCACT,IAAK,OACI,MAAA,kDACT,IAAK,SACI,MAAA,kDACT,IAAK,MACI,MAAA,+CACT,QACS,MAAA,2CACX,CAAA,EAGIgB,EAAoB7D,EAAU,OAAQ8D,GAAkB,CAC5D,MAAMC,EACJ1D,IAAmB,OAASyD,EAAQ,SAAWzD,EAC3C2D,EACJzD,IAAqB,OAASuD,EAAQ,WAAavD,EACrD,OAAOwD,GAAeC,CAAA,CACvB,EAEKC,EAAe,CACnB,MAAOjE,EAAU,OACjB,SAAUA,EAAU,OAAQwB,GAAYA,EAAE,WAAa,UAAU,EAAE,OACnE,KAAMxB,EAAU,OAAQwB,GAAYA,EAAE,WAAa,MAAM,EAAE,OAC3D,OAAQxB,EAAU,OAAQwB,GAAYA,EAAE,WAAa,QAAQ,EAAE,OAC/D,IAAKxB,EAAU,OAAQwB,GAAYA,EAAE,WAAa,KAAK,EAAE,MAAA,EAG3D,OAAIrB,SAEC+D,EACC,CAAA,SAAA,CAAAZ,MAACa,EACC,CAAA,SAAAC,EAAAA,KAACC,EAAU,CAAA,UAAU,0BACnB,SAAA,CAACf,EAAAA,IAAAgB,EAAA,CAAO,UAAU,SAAU,CAAA,EAAE,uBAAA,CAAA,CAEhC,CACF,CAAA,EACChB,MAAAiB,EAAA,CACC,SAACH,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAACd,EAAAA,IAAAkB,EAAA,CAAU,UAAU,2BAA4B,CAAA,EACjDlB,EAAAA,IAAC,QAAK,SAA4C,8CAAA,CAAA,CAAA,CAAA,CACpD,CACF,CAAA,CACF,CAAA,CAAA,SAKDY,EACC,CAAA,SAAA,CAAAE,OAACD,EACC,CAAA,SAAA,CAACC,EAAAA,KAAA,MAAA,CAAI,UAAU,oCACb,SAAA,CAACA,EAAAA,KAAAC,EAAA,CAAU,UAAU,0BACnB,SAAA,CAACf,EAAAA,IAAAgB,EAAA,CAAO,UAAU,SAAU,CAAA,EAAE,8BAE7BG,EAAM,CAAA,QAAQ,YAAY,UAAU,OAClC,WAAa,MAChB,CAAA,EACF,EACAL,EAAA,KAACM,EAAA,CACC,QAAQ,UACR,KAAK,KACL,QAAShE,EACT,SAAUP,EAEV,SAAA,CAAAmD,EAAA,IAACkB,EAAA,CACC,UAAW,gBAAgBrE,EAAU,eAAiB,EAAE,EAAA,CAC1D,EAAE,YAAA,CAAA,CAEJ,CAAA,EACF,EAGAiE,EAAAA,KAAC,MAAI,CAAA,UAAU,8BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,cACb,SAAA,CAAAd,EAAA,IAAC,MAAI,CAAA,UAAU,kCACZ,SAAAW,EAAa,SAChB,EACCX,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAO,UAAA,CAAA,EAChD,EACAc,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAAd,EAAA,IAAC,MAAI,CAAA,UAAU,qCACZ,SAAAW,EAAa,KAChB,EACCX,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAI,OAAA,CAAA,EAC7C,EACAc,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAAd,EAAA,IAAC,MAAI,CAAA,UAAU,qCACZ,SAAAW,EAAa,OAChB,EACCX,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAK,QAAA,CAAA,EAC9C,EACAc,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAAd,EAAA,IAAC,MAAI,CAAA,UAAU,oCACZ,SAAAW,EAAa,IAChB,EACCX,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAK,QAAA,CAAA,EAC9C,EACAc,EAAAA,KAAC,MAAI,CAAA,UAAU,cACb,SAAA,CAAAd,EAAA,IAAC,MAAI,CAAA,UAAU,mCACZ,SAAAW,EAAa,MAChB,EACCX,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAK,QAAA,CAAA,EAC9C,CAAA,EACF,CAAA,EACF,SAECiB,EAEC,CAAA,SAAA,CAACH,EAAAA,KAAA,MAAA,CAAI,UAAU,+BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACd,EAAAA,IAAAqB,EAAA,CAAO,UAAU,SAAU,CAAA,EAC5BP,EAAA,KAAC,SAAA,CACC,MAAO/D,EACP,SAAUuE,GAAKtE,EAAkBsE,EAAE,OAAO,KAAK,EAC/C,UAAU,sCAEV,SAAA,CAACtB,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAiB,oBAAA,EACpCA,EAAA,IAAA,SAAA,CAAO,MAAM,WAAW,SAAU,aAAA,EAClCA,EAAA,IAAA,SAAA,CAAO,MAAM,aAAa,SAAS,YAAA,EACnCA,EAAA,IAAA,SAAA,CAAO,MAAM,UAAU,SAAY,eAAA,EACnCA,EAAA,IAAA,SAAA,CAAO,MAAM,YAAY,SAAc,iBAAA,CAAA,CAAA,CAC1C,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAI,CAAA,UAAU,0BACb,SAAAc,EAAA,KAAC,SAAA,CACC,MAAO7D,EACP,SAAUqE,GAAKpE,EAAoBoE,EAAE,OAAO,KAAK,EACjD,UAAU,sCAEV,SAAA,CAACtB,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAoB,uBAAA,EACvCA,EAAA,IAAA,SAAA,CAAO,MAAM,WAAW,SAAO,UAAA,EAC/BA,EAAA,IAAA,SAAA,CAAO,MAAM,OAAO,SAAI,OAAA,EACxBA,EAAA,IAAA,SAAA,CAAO,MAAM,SAAS,SAAK,QAAA,EAC3BA,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAK,QAAA,CAAA,CAAA,CAAA,EAE7B,CAAA,EACF,EAGAA,EAAAA,IAAC,MAAI,CAAA,UAAU,YACZ,SAAAO,EAAkB,SAAW,EAC5BO,EAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAACd,EAAAA,IAAAgB,EAAA,CAAO,UAAU,mCAAoC,CAAA,EACtDhB,EAAAA,IAAC,KAAE,SAA4C,8CAAA,CAAA,EAC9CA,EAAA,IAAA,IAAA,CAAE,UAAU,UAAU,SAEvB,2DAAA,CACF,CAAA,CAAA,EAEAO,EAAkB,IAAKC,GACpBM,OAAA,MAAA,CAAqB,UAAU,wBAC9B,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACZ,SAAA,CAAAf,EAAeS,EAAQ,IAAI,SAC3B,MACC,CAAA,SAAA,CAACM,EAAAA,KAAA,KAAA,CAAG,UAAU,wBAAwB,SAAA,CAAA,eACvBN,EAAQ,MAAA,EACvB,EACAM,EAAAA,KAAC,MAAI,CAAA,UAAU,+BACb,SAAA,CAAAd,EAAAA,IAACmB,GAAM,UAAWb,EAAiBE,EAAQ,QAAQ,EAChD,WAAQ,SACX,EACCR,EAAA,IAAAmB,EAAA,CAAM,QAAQ,UAAW,WAAQ,KAAK,EACvCL,EAAAA,KAAC,OAAK,CAAA,UAAU,wBAAwB,SAAA,CAAA,WAC7BN,EAAQ,UAAU,QAAQ,CAAC,EAAE,GAAA,EACxC,CAAA,EACF,CAAA,EACF,CAAA,EACF,EAEAM,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAACd,EAAA,IAAA,MAAA,CAAI,UAAU,wBAAwB,SAAW,cAAA,EAClDA,EAAAA,IAAC,OAAI,UAAU,oBACZ,WAAQ,MAAM,QAAQ,CAAC,EAC1B,EACAc,EAAAA,KAAC,MAAI,CAAA,UAAU,wBAAwB,SAAA,CAAA,aAC1BN,EAAQ,cAAc,QAAQ,CAAC,CAAA,EAC5C,CAAA,EACF,CAAA,EACF,EAECR,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAsB,WAAQ,YAAY,EAGtDA,MAAA,MAAA,CAAI,UAAU,YACb,eAACuB,EAAoB,CAAA,MAAM,OAAO,OAAO,OACvC,SAAAT,OAACU,GAAU,CAAA,KAAMhB,EAAQ,UACvB,SAAA,CAACR,EAAAA,IAAAyB,GAAA,CAAc,gBAAgB,KAAM,CAAA,EACrCzB,EAAA,IAAC0B,GAAA,CACC,QAAQ,OACR,cACEC,GAAA,IAAI,KAAKA,CAAK,EAAE,mBAAmB,OAAO,CAAA,CAE9C,QACCC,GAAM,EAAA,EACP5B,EAAA,IAAC6B,GAAA,CACC,eACEF,GAAA,IAAI,KAAKA,CAAK,EAAE,mBAAmB,OAAO,CAAA,CAE9C,EACA3B,EAAA,IAAC8B,EAAA,CACC,KAAK,WACL,QAAQ,QACR,OAAO,UACP,YAAa,EACb,KAAK,YAAA,CACP,EACA9B,EAAA,IAAC8B,EAAA,CACC,KAAK,WACL,QAAQ,WACR,OAAO,UACP,YAAa,EACb,gBAAgB,MAChB,KAAK,gBAAA,CACP,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAEAhB,EAAAA,KAAC,MAAI,CAAA,UAAU,kDACb,SAAA,CAACA,EAAAA,KAAA,OAAA,CAAK,UAAU,wBAAwB,SAAA,CAAA,iBACvBN,EAAQ,WAAW,eAAe,OAAO,CAAA,EAC1D,EACAM,EAAA,KAACM,EAAA,CACC,QAAQ,QACR,KAAK,KACL,QAAS,IAAM,CACL,QAAA,IAAI,2BAA4BZ,CAAO,EAC/C,MACE,aAAaA,EAAQ,IAAI;AAAA;AAAA,WACvBA,EAAQ,MACV;AAAA;AAAA,cAAmBA,EAAQ,QAAQ;AAAA;AAAA,aACjCA,EAAQ,WACV;AAAA;AAAA,mBACEA,EAAQ,KACV;AAAA;AAAA,kBACEA,EAAQ,aACV;AAAA;AAAA,UAAeA,EAAQ,UAAU,QAAQ,CAAC,CAAC,GAAA,CAE/C,EAEA,SAAA,CAACR,EAAAA,IAAA+B,EAAA,CAAI,UAAU,cAAe,CAAA,EAAE,YAAA,CAAA,CAElC,CAAA,EACF,CA9FQ,CAAA,EAAAvB,EAAQ,EA+FlB,CACD,EAEL,CAAA,EACF,CACF,CAAA,CAAA,CAEJ"}