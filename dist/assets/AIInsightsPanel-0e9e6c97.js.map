{"version":3,"mappings":"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","names":["ArrowDownWideNarrow","createLucideIcon","ArrowUpNarrowWide","AIInsightsPanel","issues","sprints","timeRange","insights","setInsights","useState","loading","setLoading","filter","setFilter","sortBy","setSortBy","sortOrder","setSortOrder","useEffect","loadInsights","issue","sprint","AIInsightsService","__vitePreload","generatedInsights","insight","error","getInsightIcon","type","jsx","TrendingUp","TrendingDown","AlertTriangle","Lightbulb","Brain","getImpactColor","impact","getTypeColor","sortedInsights","a","b","aValue","bValue","impactOrder","insightStats","i","Card","CardHeader","jsxs","CardTitle","CardContent","RefreshCw","Badge","Button","Filter","e","SortDesc","SortAsc","Progress","key","value","rec","index","CheckCircle","ExternalLink"],"sources":["../../node_modules/lucide-react/dist/esm/icons/arrow-down-wide-narrow.js","../../node_modules/lucide-react/dist/esm/icons/arrow-up-narrow-wide.js","../../src/components/analytics/AIInsightsPanel.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ArrowDownWideNarrow = createLucideIcon(\"ArrowDownWideNarrow\", [\n  [\"path\", { d: \"m3 16 4 4 4-4\", key: \"1co6wj\" }],\n  [\"path\", { d: \"M7 20V4\", key: \"1yoxec\" }],\n  [\"path\", { d: \"M11 4h10\", key: \"1w87gc\" }],\n  [\"path\", { d: \"M11 8h7\", key: \"djye34\" }],\n  [\"path\", { d: \"M11 12h4\", key: \"q8tih4\" }]\n]);\n\nexport { ArrowDownWideNarrow as default };\n//# sourceMappingURL=arrow-down-wide-narrow.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ArrowUpNarrowWide = createLucideIcon(\"ArrowUpNarrowWide\", [\n  [\"path\", { d: \"m3 8 4-4 4 4\", key: \"11wl7u\" }],\n  [\"path\", { d: \"M7 4v16\", key: \"1glfcx\" }],\n  [\"path\", { d: \"M11 12h4\", key: \"q8tih4\" }],\n  [\"path\", { d: \"M11 16h7\", key: \"uosisv\" }],\n  [\"path\", { d: \"M11 20h10\", key: \"jvxblo\" }]\n]);\n\nexport { ArrowUpNarrowWide as default };\n//# sourceMappingURL=arrow-up-narrow-wide.js.map\n","// @ts-nocheck\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../ui/card';\nimport { Badge } from '../ui/badge';\nimport { Button } from '../ui/button';\nimport { Progress } from '../ui/progress';\nimport {\n  Brain,\n  TrendingUp,\n  TrendingDown,\n  AlertTriangle,\n  CheckCircle,\n  Lightbulb,\n  Filter,\n  SortAsc,\n  SortDesc,\n  RefreshCw,\n  ExternalLink,\n} from 'lucide-react';\nimport { AIInsight } from '../../services/aiInsightsService';\nimport { JiraIssue, SprintData } from '../../types/jira.types';\n\ninterface AIInsightsPanelProps {\n  issues: JiraIssue[];\n  sprints: SprintData[];\n  timeRange: 'week' | 'month' | 'quarter';\n}\n\nconst AIInsightsPanel: React.FC<AIInsightsPanelProps> = ({\n  issues,\n  sprints,\n  timeRange,\n}) => {\n  const [insights, setInsights] = useState<AIInsight[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [filter, setFilter] = useState<string>('all');\n  const [sortBy, setSortBy] = useState<'priority' | 'confidence' | 'impact'>(\n    'priority'\n  );\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\n\n  useEffect(() => {\n    loadInsights();\n  }, [issues, sprints, timeRange]);\n\n  const loadInsights = async () => {\n    setLoading(true);\n    try {\n      console.log('🔍 AIInsightsPanel - loadInsights Debug:', {\n        issuesCount: issues.length,\n        sprintsCount: sprints.length,\n        timeRange,\n        issuesSample: issues.slice(0, 3).map((issue : any) => ({\n          key: issue.key,\n          status: issue.fields.status.name,\n          type: issue.fields.issuetype.name,\n        })),\n        sprintsSample: sprints.slice(0, 3).map((sprint : any) => ({\n          id: sprint.id,\n          name: sprint.name,\n          state: sprint.state,\n        })),\n      });\n\n      const { default: AIInsightsService } = await import(\n        '../../services/aiInsightsService'\n      );\n      const service = AIInsightsService.getInstance();\n      const generatedInsights = await service.generateInsights(\n        issues,\n        sprints,\n        timeRange\n      );\n\n      console.log('🔍 AIInsightsPanel - generatedInsights:', {\n        insightsCount: generatedInsights.length,\n        insightsSample: generatedInsights.slice(0, 3).map((insight : any) => ({\n          id: insight.id,\n          type: insight.type,\n          title: insight.title,\n          confidence: insight.confidence,\n        })),\n      });\n\n      setInsights(generatedInsights);\n    } catch (error) {\n      console.error('Error loading AI insights:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getInsightIcon = (type: string) => {\n    switch (type) {\n      case 'performance':\n        return <TrendingUp className=\"w-5 h-5\" />;\n      case 'trend':\n        return <TrendingDown className=\"w-5 h-5\" />;\n      case 'anomaly':\n        return <AlertTriangle className=\"w-5 h-5\" />;\n      case 'recommendation':\n        return <Lightbulb className=\"w-5 h-5\" />;\n      case 'risk':\n        return <AlertTriangle className=\"w-5 h-5\" />;\n      default:\n        return <Brain className=\"w-5 h-5\" />;\n    }\n  };\n\n  const getImpactColor = (impact: string) => {\n    switch (impact) {\n      case 'critical':\n        return 'bg-red-100 text-red-800 border-red-200';\n      case 'high':\n        return 'bg-orange-100 text-orange-800 border-orange-200';\n      case 'medium':\n        return 'bg-yellow-100 text-yellow-800 border-yellow-200';\n      case 'low':\n        return 'bg-green-100 text-green-800 border-green-200';\n      default:\n        return 'bg-gray-100 text-gray-800 border-gray-200';\n    }\n  };\n\n  const getTypeColor = (type: string) => {\n    switch (type) {\n      case 'performance':\n        return 'text-blue-600';\n      case 'trend':\n        return 'text-purple-600';\n      case 'anomaly':\n        return 'text-red-600';\n      case 'recommendation':\n        return 'text-green-600';\n      case 'risk':\n        return 'text-orange-600';\n      default:\n        return 'text-gray-600';\n    }\n  };\n\n  const filteredInsights = insights.filter((insight : any) => {\n    if (filter === 'all') return true;\n    return insight.type === filter;\n  });\n\n  const sortedInsights = [...filteredInsights].sort((a, b) => {\n    let aValue: number, bValue: number;\n\n    switch (sortBy) {\n      case 'priority':\n        aValue = a.priority;\n        bValue = b.priority;\n        break;\n      case 'confidence':\n        aValue = a.confidence;\n        bValue = b.confidence;\n        break;\n      case 'impact':\n        const impactOrder = { critical: 4, high: 3, medium: 2, low: 1 };\n        aValue = impactOrder[a.impact as keyof typeof impactOrder] || 0;\n        bValue = impactOrder[b.impact as keyof typeof impactOrder] || 0;\n        break;\n      default:\n        aValue = a.priority;\n        bValue = b.priority;\n    }\n\n    return sortOrder === 'desc' ? bValue - aValue : aValue - bValue;\n  });\n\n  const insightStats = {\n    total: insights.length,\n    critical: insights.filter((i : any) => i.impact === 'critical').length,\n    high: insights.filter((i : any) => i.impact === 'high').length,\n    medium: insights.filter((i : any) => i.impact === 'medium').length,\n    low: insights.filter((i : any) => i.impact === 'low').length,\n  };\n\n  if (loading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Brain className=\"w-5 h-5\" />\n            AI Insights\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-center py-8\">\n            <RefreshCw className=\"w-6 h-6 animate-spin mr-2\" />\n            <span>Analisando dados com IA...</span>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"flex items-center gap-2\">\n            <Brain className=\"w-5 h-5\" />\n            AI Insights\n            <Badge variant=\"secondary\" className=\"ml-2\">\n              {insightStats.total}\n            </Badge>\n          </CardTitle>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={loadInsights}\n            disabled={loading}\n          >\n            <RefreshCw\n              className={`w-4 h-4 mr-2 ${loading ? 'animate-spin' : ''}`}\n            />\n            Atualizar\n          </Button>\n        </div>\n\n        {/* Stats */}\n        <div className=\"grid grid-cols-5 gap-2 mt-4\">\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-red-600\">\n              {insightStats.critical}\n            </div>\n            <div className=\"text-xs text-gray-500\">Crítico</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-orange-600\">\n              {insightStats.high}\n            </div>\n            <div className=\"text-xs text-gray-500\">Alto</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-yellow-600\">\n              {insightStats.medium}\n            </div>\n            <div className=\"text-xs text-gray-500\">Médio</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-green-600\">\n              {insightStats.low}\n            </div>\n            <div className=\"text-xs text-gray-500\">Baixo</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-gray-600\">\n              {insightStats.total}\n            </div>\n            <div className=\"text-xs text-gray-500\">Total</div>\n          </div>\n        </div>\n      </CardHeader>\n\n      <CardContent>\n        {/* Filters and Sort */}\n        <div className=\"flex items-center gap-4 mb-6\">\n          <div className=\"flex items-center gap-2\">\n            <Filter className=\"w-4 h-4\" />\n            <select\n              value={filter}\n              onChange={e => setFilter(e.target.value)}\n              className=\"px-3 py-1 border rounded-md text-sm\"\n            >\n              <option value=\"all\">Todos</option>\n              <option value=\"performance\">Performance</option>\n              <option value=\"trend\">Tendências</option>\n              <option value=\"anomaly\">Anomalias</option>\n              <option value=\"recommendation\">Recomendações</option>\n              <option value=\"risk\">Riscos</option>\n            </select>\n          </div>\n\n          <div className=\"flex items-center gap-2\">\n            <select\n              value={sortBy}\n              onChange={e => setSortBy(e.target.value as any)}\n              className=\"px-3 py-1 border rounded-md text-sm\"\n            >\n              <option value=\"priority\">Prioridade</option>\n              <option value=\"confidence\">Confiança</option>\n              <option value=\"impact\">Impacto</option>\n            </select>\n\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() =>\n                setSortOrder(sortOrder === 'desc' ? 'asc' : 'desc')\n              }\n            >\n              {sortOrder === 'desc' ? (\n                <SortDesc className=\"w-4 h-4\" />\n              ) : (\n                <SortAsc className=\"w-4 h-4\" />\n              )}\n            </Button>\n          </div>\n        </div>\n\n        {/* Insights List */}\n        <div className=\"space-y-4\">\n          {sortedInsights.length === 0 ? (\n            <div className=\"text-center py-8 text-gray-500\">\n              <Brain className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n              <p>Nenhum insight encontrado para os dados atuais.</p>\n              <p className=\"text-sm\">\n                Tente ajustar os filtros ou aguarde mais dados.\n              </p>\n            </div>\n          ) : (\n            sortedInsights.map((insight : any) => (\n              <div\n                key={insight.id}\n                className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\"\n              >\n                <div className=\"flex items-start justify-between mb-3\">\n                  <div className=\"flex items-center gap-3\">\n                    <div\n                      className={`p-2 rounded-lg ${getTypeColor(\n                        insight.type\n                      )} bg-opacity-10`}\n                    >\n                      {getInsightIcon(insight.type)}\n                    </div>\n                    <div>\n                      <h3 className=\"font-semibold text-lg\">{insight.title}</h3>\n                      <div className=\"flex items-center gap-2 mt-1\">\n                        <Badge className={getImpactColor(insight.impact)}>\n                          {insight.impact}\n                        </Badge>\n                        <Badge variant=\"outline\">{insight.category}</Badge>\n                        <span className=\"text-sm text-gray-500\">\n                          Prioridade: {insight.priority}/10\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"text-right\">\n                    <div className=\"text-sm text-gray-500 mb-1\">Confiança</div>\n                    <div className=\"flex items-center gap-2\">\n                      <Progress\n                        value={insight.confidence}\n                        className=\"w-20 h-2\"\n                      />\n                      <span className=\"text-sm font-medium\">\n                        {insight.confidence}%\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                <p className=\"text-gray-700 mb-4\">{insight.description}</p>\n\n                {/* Metrics */}\n                {Object.keys(insight.metrics).length > 0 && (\n                  <div className=\"mb-4\">\n                    <h4 className=\"text-sm font-medium text-gray-600 mb-2\">\n                      Métricas:\n                    </h4>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {Object.entries(insight.metrics).map(([key, value]) => (\n                        <Badge key={key} variant=\"outline\" className=\"text-xs\">\n                          {key}:{' '}\n                          {typeof value === 'number' ? value.toFixed(2) : value}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {/* Recommendations */}\n                {insight.recommendations.length > 0 && (\n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-600 mb-2\">\n                      Recomendações:\n                    </h4>\n                    <ul className=\"space-y-1\">\n                      {insight.recommendations.map((rec, index) => (\n                        <li\n                          key={index}\n                          className=\"flex items-start gap-2 text-sm text-gray-700\"\n                        >\n                          <CheckCircle className=\"w-4 h-4 text-green-500 mt-0.5 flex-shrink-0\" />\n                          <span>{rec}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n\n                <div className=\"flex items-center justify-between mt-4 pt-3 border-t\">\n                  <span className=\"text-xs text-gray-500\">\n                    {new Date(insight.timestamp).toLocaleString('pt-BR')}\n                  </span>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => {\n                      console.log('📊 Detalhes do insight:', insight);\n                      alert(\n                        `Insight: ${insight.title}\\n\\nDescrição: ${insight.description}\\n\\nConfiança: ${insight.confidence}%\\n\\nImpacto: ${insight.impact}`\n                      );\n                    }}\n                  >\n                    <ExternalLink className=\"w-4 h-4 mr-1\" />\n                    Detalhes\n                  </Button>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default AIInsightsPanel;\n"],"file":"assets/AIInsightsPanel-0e9e6c97.js"}