================================================================================
    COMANDOS PRONTOS PARA COPIAR/COLAR NA AWS
    (Execute um por um, aguarde cada um terminar)
================================================================================

ðŸŸ¢ PASSO 1: ATUALIZAR CÃ“DIGO (execute na AWS)
================================================================================
cd /home/ssm-user/jira-dash && \
git pull origin master && \
npm install && \
npm run build && \
echo "âœ… Build concluÃ­do!"

ðŸŸ¢ PASSO 2: PARAR APLICAÃ‡ÃƒO ANTERIOR (execute na AWS)
================================================================================
pm2 stop all || echo "PM2 nÃ£o ativo"

ðŸŸ¢ PASSO 3: INICIAR APLICAÃ‡ÃƒO (execute na AWS)
================================================================================
cd /home/ssm-user/jira-dash && \
pm2 start "npm run serve" --name jira-dashboard && \
pm2 logs jira-dashboard

ðŸŸ¢ PASSO 4: PREPARAR CERTIFICADO + NGINX (execute na AWS)
================================================================================
sudo mkdir -p /etc/ssl/certs /etc/ssl/private && \
sudo chmod 700 /etc/ssl/private && \
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
  -keyout /etc/ssl/private/jira-dashboard.key \
  -out /etc/ssl/certs/jira-dashboard.crt \
  -subj "/C=BR/ST=SP/L=Sao Paulo/O=Superlogica/CN=3.83.28.223" && \
echo "âœ… Certificado SSL criado!"

ðŸŸ¢ PASSO 5: INSTALAR NGINX (execute na AWS)
================================================================================
sudo apt-get update && \
sudo apt-get install -y nginx && \
sudo systemctl enable nginx && \
echo "âœ… Nginx instalado!"

ðŸŸ¢ PASSO 6: CONFIGURAR NGINX (execute na AWS)
================================================================================
# OpÃ§Ã£o A: Se tiver acesso aos arquivos jÃ¡ copiados
sudo cp /tmp/nginx-jira-dashboard.conf /etc/nginx/sites-available/jira-dashboard && \
sudo ln -sf /etc/nginx/sites-available/jira-dashboard /etc/nginx/sites-enabled/jira-dashboard && \
sudo rm -f /etc/nginx/sites-enabled/default && \
sudo nginx -t && \
sudo systemctl restart nginx && \
echo "âœ… Nginx configurado!"

# OpÃ§Ã£o B: Se precisar criar o arquivo manualmente
sudo cat > /etc/nginx/sites-available/jira-dashboard << 'NGINX'
# Redirecionar HTTP para HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name _;
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS - Servidor principal
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name 3.83.28.223;
    
    ssl_certificate /etc/ssl/certs/jira-dashboard.crt;
    ssl_certificate_key /etc/ssl/private/jira-dashboard.key;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    access_log /var/log/nginx/jira-dashboard-access.log;
    error_log /var/log/nginx/jira-dashboard-error.log;
    
    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
NGINX

sudo ln -sf /etc/nginx/sites-available/jira-dashboard /etc/nginx/sites-enabled/jira-dashboard && \
sudo rm -f /etc/nginx/sites-enabled/default && \
sudo nginx -t && \
sudo systemctl restart nginx && \
echo "âœ… Nginx configurado!"

ðŸŸ¢ PASSO 7: VERIFICAR FUNCIONAMENTO (execute na AWS)
================================================================================
# Verificar Nginx
sudo systemctl status nginx --no-pager && \
# Verificar app na porta 3000
lsof -i :3000 && \
# Verificar Nginx na porta 443
lsof -i :443 && \
echo "âœ… Tudo ativo!"

ðŸŸ¢ PASSO 8: TESTAR HTTPS (execute na mÃ¡quina local)
================================================================================
# Teste 1: Conectar HTTPS
curl -k https://3.83.28.223

# Teste 2: Verificar headers
curl -I https://3.83.28.223

# Teste 3: Verificar certificado
openssl s_client -connect 3.83.28.223:443 -brief

# Resultado esperado: VocÃª verÃ¡ a aplicaÃ§Ã£o sem erro de credenciais

================================================================================
                    âœ… IMPLEMENTAÃ‡ÃƒO COMPLETA!
================================================================================

PRÃ“XIMAS AÃ‡Ã•ES:
1. âœ… Build compilado (17.12s)
2. âœ… App rodando em porta 3000
3. âœ… Nginx como reverse proxy em 443
4. âœ… HTTPS com certificado auto-assinado
5. âœ… Headers de seguranÃ§a ativos
6. âœ… Credenciais CRIPTOGRAFADAS no trÃ¡fego
7. âœ… Presentar para time de seguranÃ§a

URL: https://3.83.28.223
Certificado: 365 dias de validade
TrÃ¡fego: 100% criptografado TLS 1.2/1.3

Data: 29 de Outubro de 2025
Status: PRONTO PARA PRODUÃ‡ÃƒO ðŸš€

================================================================================
